dist: xenial
sudo: true
language: python

# python and global.matrix are crossed to create the base build matrix
python:
  - 2.7
  - 3.5
  - 3.6
  - 3.7
env:
  global:
    - EXTRA_WHEELS="https://5cf40426d9f06eb7461d-6fe47d9331aba7cd62fc36c7196769e4.ssl.cf2.rackcdn.com"
    - PRE_WHEELS="https://7933911d6844c6c53a7d-47bd50c35cd79bd838daf386af554a83.ssl.cf2.rackcdn.com"
    - CHECK_TYPE="test"
  matrix:
    - EXTRA_PIP_FLAGS="--find-links=$EXTRA_WHEELS"
    - EXTRA_PIP_FLAGS="--pre --find-links=$EXTRA_WHEELS --find-links $PRE_WHEELS"

# Add OSX entries to the build matrix
matrix:
  include:
    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=2.7
        - MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh"
    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=3.5
        - MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"
    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=3.6
        - MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"
    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=3.7
        - MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"
    - python: 3.6
      env: CHECK_TYPE=tutorial
  allow_failures:
    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=3.5
        - MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"

before_install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export MINICONDA=$HOME/miniconda;
        export PATH="$MINICONDA/bin:$PATH";
        hash -r;
        echo $MINICONDA_URL;
        wget $MINICONDA_URL -O miniconda.sh;
        bash miniconda.sh -b -s -f -p $MINICONDA;
        conda config --set always_yes yes;
        conda info -a;
        conda install --quiet python=$PYTHON_VERSION;
      fi
    - travis_retry pip install --upgrade pip "virtualenv!=16.7.3"
    - virtualenv --python=python venv
    - source venv/bin/activate
    - python --version # just to check
    - travis_retry pip install -U pip setuptools wheel  # needed at one point
    - travis_retry pip install pytest pytest-xdist pytest-cov codecov mock
    - travis_retry pip install pathlib

install:
- pip install $EXTRA_PIP_FLAGS ".[analysis]"
- |
  if [ "$CHECK_TYPE" = "tutorial" ]; then
      pip install $EXTRA_PIP_FLAGS nbconvert jupyter_client ipykernel
  fi

script:
- |
  if [ "$CHECK_TYPE" = "test" ]; then
      py.test -n 2 -v --cov bids --cov-config .coveragerc --cov-report xml:cov.xml bids
  elif [ "$CHECK_TYPE" = "tutorial" ]; then
      jupyter nbconvert --execute examples/pybids_tutorial.ipynb
  else
      false
  fi

after_script:
- codecov --file cov.xml --flags unittests

cache: false

deploy:
  provider: pypi
  user: $PYPI_USER
  password: $PYPI_PASS
  skip_cleanup: true
  skip_existing: true
  on:
    tags: true
