dist: xenial
sudo: true
language: python
cache: false

# python and global.matrix are crossed to create the base build matrix
python:
  - 3.5
  - 3.6
  - 3.7
env:
  global:
    - INSTALL_TYPE="pip"
    - SETUP_REQUIRES="--upgrade pip setuptools wheel"
    - EXTRA_WHEELS="https://5cf40426d9f06eb7461d-6fe47d9331aba7cd62fc36c7196769e4.ssl.cf2.rackcdn.com"
    - PRE_WHEELS="https://7933911d6844c6c53a7d-47bd50c35cd79bd838daf386af554a83.ssl.cf2.rackcdn.com"
    - CHECK_TYPE="travis_tests"
  matrix:
    - EXTRA_PIP_FLAGS="--find-links=$EXTRA_WHEELS"
    - EXTRA_PIP_FLAGS="--pre --find-links=$EXTRA_WHEELS --find-links $PRE_WHEELS"

# Add OSX entries to the build matrix
matrix:
  include:
    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=3.5
        - MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"
    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=3.6
        - MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"
    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=3.7
        - MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"
    - python: 3.6
      env: CHECK_TYPE=tutorial
    - python: 3.6
      env: CHECK_TYPE=doc
    - python: 3.6
      env: INSTALL_TYPE=sdist
    - python: 3.6
      env: INSTALL_TYPE=wheel
    # Minimal setup requirements
    - python: 3.6
      env:
        - SETUP_REQUIRES="pip==10.0.1 setuptools==30.4.0"
        - CHECK_TYPE=skiptests

before_install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export MINICONDA=$HOME/miniconda;
        export PATH="$MINICONDA/bin:$PATH";
        hash -r;
        echo $MINICONDA_URL;
        wget $MINICONDA_URL -O miniconda.sh;
        bash miniconda.sh -b -s -f -p $MINICONDA;
        conda config --set always_yes yes;
        conda info -a;
        conda install --quiet python=$PYTHON_VERSION;
        hash -r;
      fi
    - travis_retry pip install --upgrade pip virtualenv
    - virtualenv --python=python venv
    - source venv/bin/activate
    - python --version # just to check
    - travis_retry pip install $SETUP_REQUIRES
    # Build package
    - |
      if [ "$INSTALL_TYPE" == "sdist" ]; then
        python setup.py egg_info  # check egg_info while we're here
        python setup.py sdist
        export ARCHIVE=$( ls dist/*.tar.gz )
      elif [ "$INSTALL_TYPE" == "wheel" ]; then
        python setup.py bdist_wheel
        export ARCHIVE=$( ls dist/*.whl )
      elif [ "$INSTALL_TYPE" = "pip" ]; then
        export ARCHIVE="."
      fi
    - |
      if [ "${ARCHIVE:0:5}" = "dist/" ]; then
        pip install twine
        twine check $ARCHIVE
      fi

install:
    # analysis extra existed and people may have it in their dependencies, so
    # install it to make sure we don't remove it (unintentionally)
    - travis_retry pip install $EXTRA_PIP_FLAGS "$ARCHIVE[analysis]"
    # Basic import check; ensures import doesn't depend on any extras
    - python -c 'import bids; print(bids.__version__)'
    - if [ "$CHECK_TYPE" == "skiptests" ]; then exit 0; fi

before_script:
    # Because pybids is already installed, will just look up the extra
    - travis_retry pip install $EXTRA_PIP_FLAGS "pybids[$CHECK_TYPE]"

script:
    - make $CHECK_TYPE

after_script:
    - codecov --file cov.xml --flags unittests

deploy:
  provider: pypi
  user: $PYPI_USER
  password: $PYPI_PASS
  skip_cleanup: true
  distributions: "-q sdist bdist_wheel"
  skip_existing: true
  on:
    tags: true
